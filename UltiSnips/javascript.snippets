snippet lst "let self = this;"
lek self = this;
endsnippet

snippet vst "var self = this;"
var self = this;
endsnippet

snippet cs "const"
const ${1:ur} = ${2:beauty};
endsnippet

snippet csr "let require"
const ${1:_} = require('${2:lodash}');
endsnippet

snippet lr "let require"
let ${1:_} = require('${2:lodash}');
endsnippet

snippet cb "callback()"
callback
endsnippet

snippet cl "console.log(arguments)"
console.log(${1:arguments});
endsnippet

snippet v "var for something"
var ${1:data};
endsnippet

snippet const
const ${1} = ${2};
endsnippet

snippet let
let ${1} = ${2};
endsnippet

snippet im
import ${1} from '${2}';
endsnippet

snippet cla
class ${1} {
	${2}
}
endsnippet

snippet clax
class ${1} extends ${2} {
	${3}
}
endsnippet

snippet =>
(${1}) => {
	${2}
}
endsnippet

snippet sym
const ${1} = Symbol('${2}');
endsnippet

snippet ed
export default ${1}
endsnippet

